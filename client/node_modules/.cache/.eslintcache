[{"/Users/riyajain/Desktop/Checking In Project/checking-in-prototype/client/src/index.js":"1","/Users/riyajain/Desktop/Checking In Project/checking-in-prototype/client/src/App.js":"2","/Users/riyajain/Desktop/Checking In Project/checking-in-prototype/client/src/Event.js":"3"},{"size":432,"mtime":1625791179659,"results":"4","hashOfConfig":"5"},{"size":9529,"mtime":1625873299884,"results":"6","hashOfConfig":"5"},{"size":934,"mtime":1625859626278,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"2kofhb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"/Users/riyajain/Desktop/Checking In Project/checking-in-prototype/client/src/index.js",[],["17","18"],"/Users/riyajain/Desktop/Checking In Project/checking-in-prototype/client/src/App.js",["19","20","21","22","23","24","25","26","27","28"],"import './App.css';\nimport React, {useState,useEffect, Component } from 'react';\nimport Event from './Event';\nimport Axios from \"axios\"\nimport axios from 'axios';\n\n\nfunction App() {\n  const [name,setName]=useState(\"\");\n  const [email,setEmail]=useState(\"\");\n  const [bookingID, setBookingID]=useState(\"\");\n  const [event,setEvent]=useState(\"\");\n  const [mainPage,setMainPage]=useState(true);\n  const[checkInPage,setCheckInPage]=useState(false)\n  const [mainUserCheckIn,setMainUserCheckIn]=useState(false)\n  const [checkedInPeople,setCheckedInPeople]=useState(false)\n  const[BacktoZero,setBacktoZero]=useState(true)\n  const[PartyNumber,setPartyNumber]=useState(1)\n  const[ getStatsPage, setgetStatsPage]=useState(false)\n  const[totalNumberofCheckIns,setTotalNumberofCheckIns]=useState(0)\n  const[totalNumberofPeople,setTotalNumberofPeople]=useState(0)\n  const eventList=[\"park gathering\",\"salsa dancing\",\"cooking session\",\"painting class\",\"happy hour\",\"tennis lesson\"]\n  const [checkInsPerEvent,setCheckInsPerEvent]=useState([])\n  const[ category1,setCategory1]=useState([])\n\n  //const [category,setCategory]=useState([])\n\n  \n  const addMainUserTable =() =>{\n    //add the main user, whose name the tickets will be under, to the database\n    Axios.post(\"http://localhost:3001/insert/newUser\",{\n      name:name,\n      email:email,\n      bookingID:bookingID,\n      event:event\n\n      \n    })\n\n\n  }\n\n  const getStatsPagefunc = ()=>{\n    setCheckInPage(false)\n    setMainPage(false)\n    setgetStatsPage(true)\n  }\n  const addPeopleFromParty=()=>{\n    if(!BacktoZero){\n        setCheckedInPeople(false)\n        console.log(checkedInPeople)\n    }\n    console.log(name,email,bookingID,event,checkedInPeople,PartyNumber)\n\n    Axios.post(\"http://localhost:3001/insert/newUser\",{\n      name:name,\n      email:email,\n      bookingID:bookingID,\n      event:event,\n      check_ins: checkedInPeople,\n      PartyNumber:PartyNumber\n      \n      \n    })\n    setBacktoZero(true)\n  }\n  \n  const checkInPeople=(value)=>{\n    console.log(value)\n    setCheckedInPeople(value)\n    setBacktoZero(false)\n    \n  }\n\n  const clearDatabase=()=>{\n    console.log(\"time to clear database\")\n    Axios.delete(\"http://localhost:3001/delete\")\n  }\n  \n  const updateUser=()=>{\n    console.log(mainUserCheckIn)\n    setMainUserCheckIn(!mainUserCheckIn)\n    //if(mainUserCheckIn){\n      console.log(\"checked in\")\n      Axios.put(\"http://localhost:3001/update\",{\n        check_ins: !mainUserCheckIn,\n        name:name,\n        bookingID:bookingID,\n        PartyNumber:PartyNumber\n      })\n      //update database for the main user\n   // }\n\n\n  }\n\n  async function getStats(){\n    let category=[]\n    let a=[{name:\"a\"},{name:\"b\"}]\n    let c=[...a]\n    const d=c.filter((element)=>element.name == \"a\")\n    console.log(d)\n\n    const response=await fetch(\"http://localhost:3001/data\")\n      const databaseArray=await response.json()\n      console.log(databaseArray)\n\n      //get total number of people\n      const totalNumberofPeopleTemp=databaseArray.length\n      setTotalNumberofPeople(totalNumberofPeopleTemp)\n\n      //get total number of people who have checked in\n      let duplicateDatabaseArray=[...databaseArray]\n     const filteredArrayCheckIns=duplicateDatabaseArray.filter((element)=>element.check_ins==\"1\")\n      console.log(filteredArrayCheckIns)\n      \n      const totalNumberofCheckInsTemp=filteredArrayCheckIns.length\n      setTotalNumberofCheckIns(totalNumberofCheckInsTemp)\n\n      //get total number of checkins per event\n      let num=0\n      let totalNum=0;\n      eventList.map(value=>{\n        num=0\n        totalNum=0\n\n        duplicateDatabaseArray.filter((element)=>element.event == \n          value).map(elem=>{\n            totalNum+=1\n            if(elem.check_ins==\"1\"){\n              num+=1\n            }\n          })\n         \n          //setCheckInsPerEvent([...checkInsPerEvent,{eventName:value,checkIns:num}])\n          console.log(num)\n          console.log(value)\n          category=[...category,{Event:value,Number:num,TotalNumber:totalNum}]\n          setCheckInsPerEvent([...checkInsPerEvent,{Number:num}])\n\n\n      }\n      )\n      setCategory1(category)\n\n      console.log(category)\n\n     \n\n\n  }\n \n  return (\n    <div className=\"App\">\n       \n        {mainPage? <>\n          <div className=\"app_personalInfo\">\n            <label className=\"app_personalInputs\" >Enter Your Name </label>\n            <input onChange={(event)=>{setName(event.target.value)}} className=\"app_personalInputs\" type=\"text\" ></input>\n            <label className=\"app_personalInputs\" >Enter Your Email  </label>\n            <input  onChange={(event)=>{setEmail(event.target.value)}} className=\"app_personalInputs\" type=\"text\" ></input>\n            <label className=\"app_personalInputs\" >Enter Your bookingID </label>\n            <input onChange={(event)=>{setBookingID(event.target.value)}} className=\"app_personalInputs\" type=\"text\" ></input>\n            <label>Choose Your Event: </label>\n            <input onChange={(event)=>{setEvent(event.target.value)}} className=\"app_personalInputs\" type=\"text\" ></input>\n            <button onClick={addPeopleFromParty} className=\"app_saveButton\">Save</button>\n\n            <label>Ready to Check In? </label>\n            <Event \n              eventName1=\"Park Gathering\" \n              eventName2=\"Salsa Dancing\"\n              eventName3=\"Painting Class\" \n              changePage={word=>setCheckInPage(word)}\n\n              changeMainPage={word1=>setMainPage(word1)}\n\n              // changePage={word=>setCheckInPage(word)}\n              // ignoreFirstPage={word1=>setMainPage(word1)}\n            />\n            <Event \n              eventName1=\"Tennis Lesson\" \n              eventName2=\"Cooking Session\"\n              eventName3=\"Happy Hour\"\n              changePage={word=>setCheckInPage(word)}\n\n              changeMainPage={word1=>setMainPage(word1)}\n            />\n            <button onClick={clearDatabase}>Clear DataBase</button>\n\n        </div>\n\n          </> : null}\n\n          { checkInPage?  <>\n          <div>\n\n       \n          <div className=\"app_personalInfo\">\n            <p>How Many People are in your party? </p>\n            <input onChange={(event)=>{setPartyNumber(event.target.value)}} type=\"number\"></input>\n           \n            <p>Are you checking yourself in? </p>\n            <input  className=\"app_checkbox\"   onClick={updateUser} type=\"checkbox\"></input>\n            <p>List the names of everyone else in your party : </p>\n            <div className=\"app_checkin\">\n            <p>Name</p>\n            <p>Check In</p>\n            </div>\n            \n            <div className=\"app_checkin\">\n            <input onChange={(event)=>{setName(event.target.value)}} type=\"text\"></input>\n              <input onClick={(event)=>checkInPeople(event.target.checked)} className=\"app_checkbox\" type=\"checkbox\"></input>\n              <input onClick={addPeopleFromParty} className=\"app_submit\" type=\"submit\"></input>\n\n            </div>\n            <div className=\"app_checkin\">\n            <input onChange={(event)=>{setName(event.target.value)}} type=\"text\"></input>\n              <input onClick={(event)=>checkInPeople(event.target.checked)} className=\"app_checkbox\" type=\"checkbox\"></input>\n              <input onClick={addPeopleFromParty} className=\"app_submit\" type=\"submit\"></input>\n\n            </div>\n            <div className=\"app_checkin\">\n            <input onChange={(event)=>{setName(event.target.value)}} type=\"text\"></input>\n              <input onClick={(event)=>checkInPeople(event.target.checked)}  className=\"app_checkbox\" type=\"checkbox\"></input>\n              <input onClick={addPeopleFromParty} className=\"app_submit\" type=\"submit\"></input>\n\n            </div>\n            <div className=\"app_checkin\">\n            <input onChange={(event)=>{setName(event.target.value)}} type=\"text\"></input>\n              <input onClick={(event)=>checkInPeople(event.target.checked)}  className=\"app_checkbox\" type=\"checkbox\"></input>\n              <input onClick={addPeopleFromParty} className=\"app_submit\" type=\"submit\"></input>\n\n            </div>\n            <div className=\"app_checkin\">\n            <input onChange={(event)=>{setName(event.target.value)}} type=\"text\"></input>\n              <input onClick={(event)=>checkInPeople(event.target.checked)}  className=\"app_checkbox\" type=\"checkbox\"></input>\n              <input onClick={addPeopleFromParty} className=\"app_submit\" type=\"submit\"></input>\n\n            </div>\n            \n            \n          </div>\n          <button onClick={getStatsPagefunc}>Get Stats</button>\n          </div>\n          </> : null}\n          \n          {getStatsPage? <>\n            <div className=\"app_statsDetails\">\n            <button onClick={getStats}>Get Stats</button>\n            <p>Total Number of people: {totalNumberofPeople}</p>\n           <p>Total Number of Check Ins: {totalNumberofCheckIns}</p>\n           {console.log(category1)}\n            {category1.map((elem)=>{\n              return(\n                <div >\n                 {elem.Event} \n                 <ol>\n                    <p>There are {elem.Number} people checked in for {elem.Event} </p>\n                    <p>Total of {elem.TotalNumber} people have signed up for {elem.Event} </p>\n                 </ol>\n                  \n\n                </div>\n               \n\n              )\n\n              \n            })}\n            </div>\n            \n                  \n            </> : null}\n\n        \n          \n         \n        \n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/riyajain/Desktop/Checking In Project/checking-in-prototype/client/src/Event.js",["29"],"import React, {useState} from 'react'\nimport './Event.css'\nexport default function Event(props) {\n\n    \n    return (\n        \n        <div className=\"events\">\n            \n            <div  className=\"events_card\">\n                <p>{props.eventName1}</p>\n                <button onClick={  ()=>{props.changeMainPage(false);props.changePage(true)}} className=\"events_button\"> Check In </button>\n            </div>\n            <div className=\"events_card\">\n                <p>{props.eventName2}</p>\n                <button onClick={  ()=>{props.changeMainPage(false);props.changePage(true)}} className=\"events_button\"> Check In </button>\n            </div>\n            <div className=\"events_card\">\n                <p>{props.eventName3}</p>\n                <button onClick={  ()=>{props.changeMainPage(false);props.changePage(true)}}className=\"events_button\"> Check In </button>\n            </div>\n            \n        </div>\n    )\n}\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":25,"nodeType":"36","messageId":"37","endLine":2,"endColumn":34},{"ruleId":"34","severity":1,"message":"38","line":2,"column":36,"nodeType":"36","messageId":"37","endLine":2,"endColumn":45},{"ruleId":"34","severity":1,"message":"39","line":5,"column":8,"nodeType":"36","messageId":"37","endLine":5,"endColumn":13},{"ruleId":"34","severity":1,"message":"40","line":29,"column":9,"nodeType":"36","messageId":"37","endLine":29,"endColumn":25},{"ruleId":"41","severity":1,"message":"42","line":101,"column":46,"nodeType":"43","messageId":"44","endLine":101,"endColumn":48},{"ruleId":"41","severity":1,"message":"42","line":114,"column":92,"nodeType":"43","messageId":"44","endLine":114,"endColumn":94},{"ruleId":"45","severity":1,"message":"46","line":123,"column":26,"nodeType":"47","messageId":"48","endLine":123,"endColumn":28},{"ruleId":"41","severity":1,"message":"42","line":127,"column":64,"nodeType":"43","messageId":"44","endLine":127,"endColumn":66},{"ruleId":"45","severity":1,"message":"46","line":128,"column":26,"nodeType":"47","messageId":"48","endLine":128,"endColumn":28},{"ruleId":"41","severity":1,"message":"42","line":130,"column":30,"nodeType":"43","messageId":"44","endLine":130,"endColumn":32},{"ruleId":"34","severity":1,"message":"49","line":1,"column":16,"nodeType":"36","messageId":"37","endLine":1,"endColumn":24},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'axios' is defined but never used.","'addMainUserTable' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]